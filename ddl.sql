-- Tabela USUARIO
CREATE TABLE IF NOT EXISTS USUARIO (
  idUsuario SERIAL,
  nomeUsuario VARCHAR(255) NOT NULL,
  emailUsuario VARCHAR(255) NOT NULL,
  senhaUsuario VARCHAR(255) NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT NULL,
  CONSTRAINT pkUsuario PRIMARY KEY (idUsuario),
  CONSTRAINT ukUsuarioEmail UNIQUE (emailUsuario)
);

-- Tabela EMPRESA
CREATE TABLE IF NOT EXISTS EMPRESA (
  idEmpresa INT,
  cnpj CHAR(14) NOT NULL,
  CONSTRAINT pkEmpresa PRIMARY KEY (idEmpresa),
  CONSTRAINT ukEmpresaCNPJ UNIQUE (cnpj),
  CONSTRAINT fkEmpresaUsuario FOREIGN KEY (idEmpresa)
    REFERENCES USUARIO (idUsuario) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Tabela ALUNO
CREATE TABLE IF NOT EXISTS ALUNO (
  idAluno INT,
  cpf CHAR(11) NOT NULL,
  CONSTRAINT pkAluno PRIMARY KEY (idAluno),
  CONSTRAINT ukAlunoCPF UNIQUE (cpf),
  CONSTRAINT fkAlunoUsuario FOREIGN KEY (idAluno)
    REFERENCES USUARIO (idUsuario) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Tabela EGRESSO
CREATE TABLE IF NOT EXISTS EGRESSO (
  idEgresso INT,
  idEmpresa INT NOT NULL,
  cpf CHAR(11) NOT NULL,
  CONSTRAINT pkEgresso PRIMARY KEY (idEgresso),
  CONSTRAINT ukEgressoCPF UNIQUE (cpf),
  CONSTRAINT fkEgressoUsuario FOREIGN KEY (idEgresso)
    REFERENCES USUARIO (idUsuario) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fkEgressoEmpresa FOREIGN KEY (idEmpresa)
    REFERENCES EMPRESA (idEmpresa) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Tabela ETAPA
CREATE TABLE IF NOT EXISTS ETAPA (
  idEtapa SERIAL,
  nomeEtapa VARCHAR(100) NOT NULL,
  descricaoEtapa TEXT NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT NULL,
  CONSTRAINT pkEtapa PRIMARY KEY (idEtapa)
);

-- Tabela VAGA
CREATE TABLE IF NOT EXISTS VAGA (
  idVaga SERIAL,
  idEtapa INT NOT NULL,
  idEmpresa INT NOT NULL,
  cargo VARCHAR(255) NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT NULL,
  CONSTRAINT pkVaga PRIMARY KEY (idVaga),
  CONSTRAINT fkVagaEtapa FOREIGN KEY (idEtapa)
    REFERENCES ETAPA (idEtapa) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fkVagaEmpresa FOREIGN KEY (idEmpresa)
    REFERENCES EMPRESA (idEmpresa) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Tabela SITUACAO
CREATE TABLE IF NOT EXISTS SITUACAO (
  idSituacao SERIAL,
  nomeSituacao VARCHAR(100) NOT NULL,
  descricaoSituacao TEXT NOT NULL,
  CONSTRAINT pkSituacao PRIMARY KEY (idSituacao)
);

-- Tabela CANDIDATURA
CREATE TABLE IF NOT EXISTS CANDIDATURA (
  idVaga INT NOT NULL,
  idAluno INT NOT NULL,
  curriculo BYTEA NOT NULL,
  idSituacao INT NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT NULL,
  CONSTRAINT pkCandidatura PRIMARY KEY (idVaga, idAluno),
  CONSTRAINT fkCandidaturaVaga FOREIGN KEY (idVaga)
    REFERENCES VAGA (idVaga) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fkCandidaturaSituacao FOREIGN KEY (idSituacao)
    REFERENCES SITUACAO (idSituacao) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fkCandidaturaAluno FOREIGN KEY (idAluno)
    REFERENCES ALUNO (idAluno) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Tabela STATUS
CREATE TABLE IF NOT EXISTS STATUS (
  idStatus SERIAL,
  nomeStatus VARCHAR(100) NOT NULL,
  descricaoStatus TEXT NOT NULL,
  CONSTRAINT pkStatus PRIMARY KEY (idStatus)
);

-- Tabela INDICACAO
CREATE TABLE IF NOT EXISTS INDICACAO (
  idEgresso INT NOT NULL,
  idAluno INT NOT NULL,
  idVaga INT NOT NULL,
  idStatus INT NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT NULL,
  CONSTRAINT pkIndicacao PRIMARY KEY (idEgresso, idAluno, idVaga),
  CONSTRAINT fkIndicacaoEgresso FOREIGN KEY (idEgresso)
    REFERENCES EGRESSO (idEgresso) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fkIndicacaoAluno FOREIGN KEY (idAluno)
    REFERENCES ALUNO (idAluno) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fkIndicacaoVaga FOREIGN KEY (idVaga)
    REFERENCES VAGA (idVaga) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fkIndicacaoStatus FOREIGN KEY (idStatus)
    REFERENCES STATUS (idStatus) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Tabela REQUISITO
CREATE TABLE IF NOT EXISTS REQUISITO (
  idRequisito SERIAL,
  nomeRequisito VARCHAR(255) NOT NULL,
  duracaoRequisito VARCHAR(255),
  CONSTRAINT pkRequisito PRIMARY KEY (idRequisito)
);

-- Tabela VAGA_REQUISITO
CREATE TABLE IF NOT EXISTS VAGA_REQUISITO (
  idVaga INT NOT NULL,
  idRequisito INT NOT NULL,
  CONSTRAINT pkVagaRequisito PRIMARY KEY (idVaga, idRequisito),
  CONSTRAINT fkVagaRequisitoVaga FOREIGN KEY (idVaga)
    REFERENCES VAGA (idVaga) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fkVagaRequisitoRequisito FOREIGN KEY (idRequisito)
    REFERENCES REQUISITO (idRequisito) ON DELETE CASCADE ON UPDATE CASCADE
);